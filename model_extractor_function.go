/*
openapi for sibyl2 server

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ExtractorFunction struct for ExtractorFunction
type ExtractorFunction struct {
	BodySpan *CoreSpan `json:"bodySpan,omitempty"`
	// which contains language-specific contents
	Extras map[string]interface{} `json:"extras,omitempty"`
	// language
	Lang       *string           `json:"lang,omitempty"`
	Name       *string           `json:"name,omitempty"`
	Parameters []ObjectValueUnit `json:"parameters,omitempty"`
	Receiver   *string           `json:"receiver,omitempty"`
	Returns    []ObjectValueUnit `json:"returns,omitempty"`
	Span       *CoreSpan         `json:"span,omitempty"`
}

// NewExtractorFunction instantiates a new ExtractorFunction object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExtractorFunction() *ExtractorFunction {
	this := ExtractorFunction{}
	return &this
}

// NewExtractorFunctionWithDefaults instantiates a new ExtractorFunction object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExtractorFunctionWithDefaults() *ExtractorFunction {
	this := ExtractorFunction{}
	return &this
}

// GetBodySpan returns the BodySpan field value if set, zero value otherwise.
func (o *ExtractorFunction) GetBodySpan() CoreSpan {
	if o == nil || isNil(o.BodySpan) {
		var ret CoreSpan
		return ret
	}
	return *o.BodySpan
}

// GetBodySpanOk returns a tuple with the BodySpan field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExtractorFunction) GetBodySpanOk() (*CoreSpan, bool) {
	if o == nil || isNil(o.BodySpan) {
		return nil, false
	}
	return o.BodySpan, true
}

// HasBodySpan returns a boolean if a field has been set.
func (o *ExtractorFunction) HasBodySpan() bool {
	if o != nil && !isNil(o.BodySpan) {
		return true
	}

	return false
}

// SetBodySpan gets a reference to the given CoreSpan and assigns it to the BodySpan field.
func (o *ExtractorFunction) SetBodySpan(v CoreSpan) {
	o.BodySpan = &v
}

// GetExtras returns the Extras field value if set, zero value otherwise.
func (o *ExtractorFunction) GetExtras() map[string]interface{} {
	if o == nil || isNil(o.Extras) {
		var ret map[string]interface{}
		return ret
	}
	return o.Extras
}

// GetExtrasOk returns a tuple with the Extras field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExtractorFunction) GetExtrasOk() (map[string]interface{}, bool) {
	if o == nil || isNil(o.Extras) {
		return map[string]interface{}{}, false
	}
	return o.Extras, true
}

// HasExtras returns a boolean if a field has been set.
func (o *ExtractorFunction) HasExtras() bool {
	if o != nil && !isNil(o.Extras) {
		return true
	}

	return false
}

// SetExtras gets a reference to the given map[string]interface{} and assigns it to the Extras field.
func (o *ExtractorFunction) SetExtras(v map[string]interface{}) {
	o.Extras = v
}

// GetLang returns the Lang field value if set, zero value otherwise.
func (o *ExtractorFunction) GetLang() string {
	if o == nil || isNil(o.Lang) {
		var ret string
		return ret
	}
	return *o.Lang
}

// GetLangOk returns a tuple with the Lang field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExtractorFunction) GetLangOk() (*string, bool) {
	if o == nil || isNil(o.Lang) {
		return nil, false
	}
	return o.Lang, true
}

// HasLang returns a boolean if a field has been set.
func (o *ExtractorFunction) HasLang() bool {
	if o != nil && !isNil(o.Lang) {
		return true
	}

	return false
}

// SetLang gets a reference to the given string and assigns it to the Lang field.
func (o *ExtractorFunction) SetLang(v string) {
	o.Lang = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ExtractorFunction) GetName() string {
	if o == nil || isNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExtractorFunction) GetNameOk() (*string, bool) {
	if o == nil || isNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ExtractorFunction) HasName() bool {
	if o != nil && !isNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ExtractorFunction) SetName(v string) {
	o.Name = &v
}

// GetParameters returns the Parameters field value if set, zero value otherwise.
func (o *ExtractorFunction) GetParameters() []ObjectValueUnit {
	if o == nil || isNil(o.Parameters) {
		var ret []ObjectValueUnit
		return ret
	}
	return o.Parameters
}

// GetParametersOk returns a tuple with the Parameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExtractorFunction) GetParametersOk() ([]ObjectValueUnit, bool) {
	if o == nil || isNil(o.Parameters) {
		return nil, false
	}
	return o.Parameters, true
}

// HasParameters returns a boolean if a field has been set.
func (o *ExtractorFunction) HasParameters() bool {
	if o != nil && !isNil(o.Parameters) {
		return true
	}

	return false
}

// SetParameters gets a reference to the given []ObjectValueUnit and assigns it to the Parameters field.
func (o *ExtractorFunction) SetParameters(v []ObjectValueUnit) {
	o.Parameters = v
}

// GetReceiver returns the Receiver field value if set, zero value otherwise.
func (o *ExtractorFunction) GetReceiver() string {
	if o == nil || isNil(o.Receiver) {
		var ret string
		return ret
	}
	return *o.Receiver
}

// GetReceiverOk returns a tuple with the Receiver field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExtractorFunction) GetReceiverOk() (*string, bool) {
	if o == nil || isNil(o.Receiver) {
		return nil, false
	}
	return o.Receiver, true
}

// HasReceiver returns a boolean if a field has been set.
func (o *ExtractorFunction) HasReceiver() bool {
	if o != nil && !isNil(o.Receiver) {
		return true
	}

	return false
}

// SetReceiver gets a reference to the given string and assigns it to the Receiver field.
func (o *ExtractorFunction) SetReceiver(v string) {
	o.Receiver = &v
}

// GetReturns returns the Returns field value if set, zero value otherwise.
func (o *ExtractorFunction) GetReturns() []ObjectValueUnit {
	if o == nil || isNil(o.Returns) {
		var ret []ObjectValueUnit
		return ret
	}
	return o.Returns
}

// GetReturnsOk returns a tuple with the Returns field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExtractorFunction) GetReturnsOk() ([]ObjectValueUnit, bool) {
	if o == nil || isNil(o.Returns) {
		return nil, false
	}
	return o.Returns, true
}

// HasReturns returns a boolean if a field has been set.
func (o *ExtractorFunction) HasReturns() bool {
	if o != nil && !isNil(o.Returns) {
		return true
	}

	return false
}

// SetReturns gets a reference to the given []ObjectValueUnit and assigns it to the Returns field.
func (o *ExtractorFunction) SetReturns(v []ObjectValueUnit) {
	o.Returns = v
}

// GetSpan returns the Span field value if set, zero value otherwise.
func (o *ExtractorFunction) GetSpan() CoreSpan {
	if o == nil || isNil(o.Span) {
		var ret CoreSpan
		return ret
	}
	return *o.Span
}

// GetSpanOk returns a tuple with the Span field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExtractorFunction) GetSpanOk() (*CoreSpan, bool) {
	if o == nil || isNil(o.Span) {
		return nil, false
	}
	return o.Span, true
}

// HasSpan returns a boolean if a field has been set.
func (o *ExtractorFunction) HasSpan() bool {
	if o != nil && !isNil(o.Span) {
		return true
	}

	return false
}

// SetSpan gets a reference to the given CoreSpan and assigns it to the Span field.
func (o *ExtractorFunction) SetSpan(v CoreSpan) {
	o.Span = &v
}

func (o ExtractorFunction) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.BodySpan) {
		toSerialize["bodySpan"] = o.BodySpan
	}
	if !isNil(o.Extras) {
		toSerialize["extras"] = o.Extras
	}
	if !isNil(o.Lang) {
		toSerialize["lang"] = o.Lang
	}
	if !isNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !isNil(o.Parameters) {
		toSerialize["parameters"] = o.Parameters
	}
	if !isNil(o.Receiver) {
		toSerialize["receiver"] = o.Receiver
	}
	if !isNil(o.Returns) {
		toSerialize["returns"] = o.Returns
	}
	if !isNil(o.Span) {
		toSerialize["span"] = o.Span
	}
	return json.Marshal(toSerialize)
}

type NullableExtractorFunction struct {
	value *ExtractorFunction
	isSet bool
}

func (v NullableExtractorFunction) Get() *ExtractorFunction {
	return v.value
}

func (v *NullableExtractorFunction) Set(val *ExtractorFunction) {
	v.value = val
	v.isSet = true
}

func (v NullableExtractorFunction) IsSet() bool {
	return v.isSet
}

func (v *NullableExtractorFunction) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExtractorFunction(val *ExtractorFunction) *NullableExtractorFunction {
	return &NullableExtractorFunction{value: val, isSet: true}
}

func (v NullableExtractorFunction) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExtractorFunction) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
