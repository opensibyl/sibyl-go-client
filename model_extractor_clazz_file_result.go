/*
openapi for sibyl2 server

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ExtractorClazzFileResult struct for ExtractorClazzFileResult
type ExtractorClazzFileResult struct {
	// language
	Language *string          `json:"language,omitempty"`
	Path     *string          `json:"path,omitempty"`
	Type     *string          `json:"type,omitempty"`
	Units    []ExtractorClazz `json:"units,omitempty"`
}

// NewExtractorClazzFileResult instantiates a new ExtractorClazzFileResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExtractorClazzFileResult() *ExtractorClazzFileResult {
	this := ExtractorClazzFileResult{}
	return &this
}

// NewExtractorClazzFileResultWithDefaults instantiates a new ExtractorClazzFileResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExtractorClazzFileResultWithDefaults() *ExtractorClazzFileResult {
	this := ExtractorClazzFileResult{}
	return &this
}

// GetLanguage returns the Language field value if set, zero value otherwise.
func (o *ExtractorClazzFileResult) GetLanguage() string {
	if o == nil || isNil(o.Language) {
		var ret string
		return ret
	}
	return *o.Language
}

// GetLanguageOk returns a tuple with the Language field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExtractorClazzFileResult) GetLanguageOk() (*string, bool) {
	if o == nil || isNil(o.Language) {
		return nil, false
	}
	return o.Language, true
}

// HasLanguage returns a boolean if a field has been set.
func (o *ExtractorClazzFileResult) HasLanguage() bool {
	if o != nil && !isNil(o.Language) {
		return true
	}

	return false
}

// SetLanguage gets a reference to the given string and assigns it to the Language field.
func (o *ExtractorClazzFileResult) SetLanguage(v string) {
	o.Language = &v
}

// GetPath returns the Path field value if set, zero value otherwise.
func (o *ExtractorClazzFileResult) GetPath() string {
	if o == nil || isNil(o.Path) {
		var ret string
		return ret
	}
	return *o.Path
}

// GetPathOk returns a tuple with the Path field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExtractorClazzFileResult) GetPathOk() (*string, bool) {
	if o == nil || isNil(o.Path) {
		return nil, false
	}
	return o.Path, true
}

// HasPath returns a boolean if a field has been set.
func (o *ExtractorClazzFileResult) HasPath() bool {
	if o != nil && !isNil(o.Path) {
		return true
	}

	return false
}

// SetPath gets a reference to the given string and assigns it to the Path field.
func (o *ExtractorClazzFileResult) SetPath(v string) {
	o.Path = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *ExtractorClazzFileResult) GetType() string {
	if o == nil || isNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExtractorClazzFileResult) GetTypeOk() (*string, bool) {
	if o == nil || isNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *ExtractorClazzFileResult) HasType() bool {
	if o != nil && !isNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *ExtractorClazzFileResult) SetType(v string) {
	o.Type = &v
}

// GetUnits returns the Units field value if set, zero value otherwise.
func (o *ExtractorClazzFileResult) GetUnits() []ExtractorClazz {
	if o == nil || isNil(o.Units) {
		var ret []ExtractorClazz
		return ret
	}
	return o.Units
}

// GetUnitsOk returns a tuple with the Units field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExtractorClazzFileResult) GetUnitsOk() ([]ExtractorClazz, bool) {
	if o == nil || isNil(o.Units) {
		return nil, false
	}
	return o.Units, true
}

// HasUnits returns a boolean if a field has been set.
func (o *ExtractorClazzFileResult) HasUnits() bool {
	if o != nil && !isNil(o.Units) {
		return true
	}

	return false
}

// SetUnits gets a reference to the given []ExtractorClazz and assigns it to the Units field.
func (o *ExtractorClazzFileResult) SetUnits(v []ExtractorClazz) {
	o.Units = v
}

func (o ExtractorClazzFileResult) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Language) {
		toSerialize["language"] = o.Language
	}
	if !isNil(o.Path) {
		toSerialize["path"] = o.Path
	}
	if !isNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !isNil(o.Units) {
		toSerialize["units"] = o.Units
	}
	return json.Marshal(toSerialize)
}

type NullableExtractorClazzFileResult struct {
	value *ExtractorClazzFileResult
	isSet bool
}

func (v NullableExtractorClazzFileResult) Get() *ExtractorClazzFileResult {
	return v.value
}

func (v *NullableExtractorClazzFileResult) Set(val *ExtractorClazzFileResult) {
	v.value = val
	v.isSet = true
}

func (v NullableExtractorClazzFileResult) IsSet() bool {
	return v.isSet
}

func (v *NullableExtractorClazzFileResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExtractorClazzFileResult(val *ExtractorClazzFileResult) *NullableExtractorClazzFileResult {
	return &NullableExtractorClazzFileResult{value: val, isSet: true}
}

func (v NullableExtractorClazzFileResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExtractorClazzFileResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
