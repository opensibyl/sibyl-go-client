/*
openapi for sibyl2 server

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// CorePoint struct for CorePoint
type CorePoint struct {
	Column *int32 `json:"column,omitempty"`
	// NOTICE: INDEX, NOT REAL LINE NUMBER
	Row *int32 `json:"row,omitempty"`
}

// NewCorePoint instantiates a new CorePoint object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCorePoint() *CorePoint {
	this := CorePoint{}
	return &this
}

// NewCorePointWithDefaults instantiates a new CorePoint object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCorePointWithDefaults() *CorePoint {
	this := CorePoint{}
	return &this
}

// GetColumn returns the Column field value if set, zero value otherwise.
func (o *CorePoint) GetColumn() int32 {
	if o == nil || isNil(o.Column) {
		var ret int32
		return ret
	}
	return *o.Column
}

// GetColumnOk returns a tuple with the Column field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CorePoint) GetColumnOk() (*int32, bool) {
	if o == nil || isNil(o.Column) {
		return nil, false
	}
	return o.Column, true
}

// HasColumn returns a boolean if a field has been set.
func (o *CorePoint) HasColumn() bool {
	if o != nil && !isNil(o.Column) {
		return true
	}

	return false
}

// SetColumn gets a reference to the given int32 and assigns it to the Column field.
func (o *CorePoint) SetColumn(v int32) {
	o.Column = &v
}

// GetRow returns the Row field value if set, zero value otherwise.
func (o *CorePoint) GetRow() int32 {
	if o == nil || isNil(o.Row) {
		var ret int32
		return ret
	}
	return *o.Row
}

// GetRowOk returns a tuple with the Row field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CorePoint) GetRowOk() (*int32, bool) {
	if o == nil || isNil(o.Row) {
		return nil, false
	}
	return o.Row, true
}

// HasRow returns a boolean if a field has been set.
func (o *CorePoint) HasRow() bool {
	if o != nil && !isNil(o.Row) {
		return true
	}

	return false
}

// SetRow gets a reference to the given int32 and assigns it to the Row field.
func (o *CorePoint) SetRow(v int32) {
	o.Row = &v
}

func (o CorePoint) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Column) {
		toSerialize["column"] = o.Column
	}
	if !isNil(o.Row) {
		toSerialize["row"] = o.Row
	}
	return json.Marshal(toSerialize)
}

type NullableCorePoint struct {
	value *CorePoint
	isSet bool
}

func (v NullableCorePoint) Get() *CorePoint {
	return v.value
}

func (v *NullableCorePoint) Set(val *CorePoint) {
	v.value = val
	v.isSet = true
}

func (v NullableCorePoint) IsSet() bool {
	return v.isSet
}

func (v *NullableCorePoint) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCorePoint(val *CorePoint) *NullableCorePoint {
	return &NullableCorePoint{value: val, isSet: true}
}

func (v NullableCorePoint) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCorePoint) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
