/*
openapi for sibyl2 server

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ServiceTagUpload struct for ServiceTagUpload
type ServiceTagUpload struct {
	RepoId    *string `json:"repoId,omitempty"`
	RevHash   *string `json:"revHash,omitempty"`
	Signature *string `json:"signature,omitempty"`
	Tag       *string `json:"tag,omitempty"`
}

// NewServiceTagUpload instantiates a new ServiceTagUpload object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServiceTagUpload() *ServiceTagUpload {
	this := ServiceTagUpload{}
	return &this
}

// NewServiceTagUploadWithDefaults instantiates a new ServiceTagUpload object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServiceTagUploadWithDefaults() *ServiceTagUpload {
	this := ServiceTagUpload{}
	return &this
}

// GetRepoId returns the RepoId field value if set, zero value otherwise.
func (o *ServiceTagUpload) GetRepoId() string {
	if o == nil || isNil(o.RepoId) {
		var ret string
		return ret
	}
	return *o.RepoId
}

// GetRepoIdOk returns a tuple with the RepoId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceTagUpload) GetRepoIdOk() (*string, bool) {
	if o == nil || isNil(o.RepoId) {
		return nil, false
	}
	return o.RepoId, true
}

// HasRepoId returns a boolean if a field has been set.
func (o *ServiceTagUpload) HasRepoId() bool {
	if o != nil && !isNil(o.RepoId) {
		return true
	}

	return false
}

// SetRepoId gets a reference to the given string and assigns it to the RepoId field.
func (o *ServiceTagUpload) SetRepoId(v string) {
	o.RepoId = &v
}

// GetRevHash returns the RevHash field value if set, zero value otherwise.
func (o *ServiceTagUpload) GetRevHash() string {
	if o == nil || isNil(o.RevHash) {
		var ret string
		return ret
	}
	return *o.RevHash
}

// GetRevHashOk returns a tuple with the RevHash field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceTagUpload) GetRevHashOk() (*string, bool) {
	if o == nil || isNil(o.RevHash) {
		return nil, false
	}
	return o.RevHash, true
}

// HasRevHash returns a boolean if a field has been set.
func (o *ServiceTagUpload) HasRevHash() bool {
	if o != nil && !isNil(o.RevHash) {
		return true
	}

	return false
}

// SetRevHash gets a reference to the given string and assigns it to the RevHash field.
func (o *ServiceTagUpload) SetRevHash(v string) {
	o.RevHash = &v
}

// GetSignature returns the Signature field value if set, zero value otherwise.
func (o *ServiceTagUpload) GetSignature() string {
	if o == nil || isNil(o.Signature) {
		var ret string
		return ret
	}
	return *o.Signature
}

// GetSignatureOk returns a tuple with the Signature field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceTagUpload) GetSignatureOk() (*string, bool) {
	if o == nil || isNil(o.Signature) {
		return nil, false
	}
	return o.Signature, true
}

// HasSignature returns a boolean if a field has been set.
func (o *ServiceTagUpload) HasSignature() bool {
	if o != nil && !isNil(o.Signature) {
		return true
	}

	return false
}

// SetSignature gets a reference to the given string and assigns it to the Signature field.
func (o *ServiceTagUpload) SetSignature(v string) {
	o.Signature = &v
}

// GetTag returns the Tag field value if set, zero value otherwise.
func (o *ServiceTagUpload) GetTag() string {
	if o == nil || isNil(o.Tag) {
		var ret string
		return ret
	}
	return *o.Tag
}

// GetTagOk returns a tuple with the Tag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceTagUpload) GetTagOk() (*string, bool) {
	if o == nil || isNil(o.Tag) {
		return nil, false
	}
	return o.Tag, true
}

// HasTag returns a boolean if a field has been set.
func (o *ServiceTagUpload) HasTag() bool {
	if o != nil && !isNil(o.Tag) {
		return true
	}

	return false
}

// SetTag gets a reference to the given string and assigns it to the Tag field.
func (o *ServiceTagUpload) SetTag(v string) {
	o.Tag = &v
}

func (o ServiceTagUpload) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.RepoId) {
		toSerialize["repoId"] = o.RepoId
	}
	if !isNil(o.RevHash) {
		toSerialize["revHash"] = o.RevHash
	}
	if !isNil(o.Signature) {
		toSerialize["signature"] = o.Signature
	}
	if !isNil(o.Tag) {
		toSerialize["tag"] = o.Tag
	}
	return json.Marshal(toSerialize)
}

type NullableServiceTagUpload struct {
	value *ServiceTagUpload
	isSet bool
}

func (v NullableServiceTagUpload) Get() *ServiceTagUpload {
	return v.value
}

func (v *NullableServiceTagUpload) Set(val *ServiceTagUpload) {
	v.value = val
	v.isSet = true
}

func (v NullableServiceTagUpload) IsSet() bool {
	return v.isSet
}

func (v *NullableServiceTagUpload) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServiceTagUpload(val *ServiceTagUpload) *NullableServiceTagUpload {
	return &NullableServiceTagUpload{value: val, isSet: true}
}

func (v NullableServiceTagUpload) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServiceTagUpload) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
