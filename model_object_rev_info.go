/*
openapi for sibyl2 server

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ObjectRevInfo struct for ObjectRevInfo
type ObjectRevInfo struct {
	CreateTime *int32                 `json:"createTime,omitempty"`
	Extras     map[string]interface{} `json:"extras,omitempty"`
	Hash       *string                `json:"hash,omitempty"`
}

// NewObjectRevInfo instantiates a new ObjectRevInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewObjectRevInfo() *ObjectRevInfo {
	this := ObjectRevInfo{}
	return &this
}

// NewObjectRevInfoWithDefaults instantiates a new ObjectRevInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewObjectRevInfoWithDefaults() *ObjectRevInfo {
	this := ObjectRevInfo{}
	return &this
}

// GetCreateTime returns the CreateTime field value if set, zero value otherwise.
func (o *ObjectRevInfo) GetCreateTime() int32 {
	if o == nil || isNil(o.CreateTime) {
		var ret int32
		return ret
	}
	return *o.CreateTime
}

// GetCreateTimeOk returns a tuple with the CreateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectRevInfo) GetCreateTimeOk() (*int32, bool) {
	if o == nil || isNil(o.CreateTime) {
		return nil, false
	}
	return o.CreateTime, true
}

// HasCreateTime returns a boolean if a field has been set.
func (o *ObjectRevInfo) HasCreateTime() bool {
	if o != nil && !isNil(o.CreateTime) {
		return true
	}

	return false
}

// SetCreateTime gets a reference to the given int32 and assigns it to the CreateTime field.
func (o *ObjectRevInfo) SetCreateTime(v int32) {
	o.CreateTime = &v
}

// GetExtras returns the Extras field value if set, zero value otherwise.
func (o *ObjectRevInfo) GetExtras() map[string]interface{} {
	if o == nil || isNil(o.Extras) {
		var ret map[string]interface{}
		return ret
	}
	return o.Extras
}

// GetExtrasOk returns a tuple with the Extras field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectRevInfo) GetExtrasOk() (map[string]interface{}, bool) {
	if o == nil || isNil(o.Extras) {
		return map[string]interface{}{}, false
	}
	return o.Extras, true
}

// HasExtras returns a boolean if a field has been set.
func (o *ObjectRevInfo) HasExtras() bool {
	if o != nil && !isNil(o.Extras) {
		return true
	}

	return false
}

// SetExtras gets a reference to the given map[string]interface{} and assigns it to the Extras field.
func (o *ObjectRevInfo) SetExtras(v map[string]interface{}) {
	o.Extras = v
}

// GetHash returns the Hash field value if set, zero value otherwise.
func (o *ObjectRevInfo) GetHash() string {
	if o == nil || isNil(o.Hash) {
		var ret string
		return ret
	}
	return *o.Hash
}

// GetHashOk returns a tuple with the Hash field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectRevInfo) GetHashOk() (*string, bool) {
	if o == nil || isNil(o.Hash) {
		return nil, false
	}
	return o.Hash, true
}

// HasHash returns a boolean if a field has been set.
func (o *ObjectRevInfo) HasHash() bool {
	if o != nil && !isNil(o.Hash) {
		return true
	}

	return false
}

// SetHash gets a reference to the given string and assigns it to the Hash field.
func (o *ObjectRevInfo) SetHash(v string) {
	o.Hash = &v
}

func (o ObjectRevInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.CreateTime) {
		toSerialize["createTime"] = o.CreateTime
	}
	if !isNil(o.Extras) {
		toSerialize["extras"] = o.Extras
	}
	if !isNil(o.Hash) {
		toSerialize["hash"] = o.Hash
	}
	return json.Marshal(toSerialize)
}

type NullableObjectRevInfo struct {
	value *ObjectRevInfo
	isSet bool
}

func (v NullableObjectRevInfo) Get() *ObjectRevInfo {
	return v.value
}

func (v *NullableObjectRevInfo) Set(val *ObjectRevInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableObjectRevInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableObjectRevInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableObjectRevInfo(val *ObjectRevInfo) *NullableObjectRevInfo {
	return &NullableObjectRevInfo{value: val, isSet: true}
}

func (v NullableObjectRevInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableObjectRevInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
